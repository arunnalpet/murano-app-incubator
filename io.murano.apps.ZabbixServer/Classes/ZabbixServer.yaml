Namespaces:
  =: io.murano.apps
  std: io.murano
  res: io.murano.resources
  sys: io.murano.system


Name: ZabbixServer

Extends: std:Application

Properties:
  name:
    Contract: $.string().notNull()
  instance:
    Contract: $.class(res:Instance).notNull()
  database:
    Contract: $.string().notNull()
  username:
    Contract: $.string().notNull()
  password:
    Contract: $.string().notNull()

Methods:
  initialize:
    Body:
      - $._environment: $.find(std:Environment).require()

  deploy:
    Body:
      - If: not $.getAttr(deployed, false)
        Then:
          - $._environment.reporter.report($this, 'Creating VM for Zabbix Server')
          - $securityGroupIngress:
              - ToPort: 10051
                FromPort: 10051
                IpProtocol: tcp
                External: true
              - ToPort: 80
                FromPort: 80
                IpProtocol: tcp
                External: true
              - ToPort: 443
                FromPort: 443
                IpProtocol: tcp
                External: true
          - $._environment.securityGroupManager.addGroupIngress($securityGroupIngress)
          - $.instance.deploy()
          - $resources: new(sys:Resources)
          - $template: $resources.yaml('DeployZabbixServer.template').bind(dict(
                database => $.database,
                username => $.username,
                password => $.password
              ))
          - $._environment.reporter.report($this, 'Instance is created. Deploying Zabbix Server')
          - $.instance.agent.call($template, $resources)
          - If: $.instance.assignFloatingIp
            Then:
              - $address: $.instance.floatingIpAddress + '/zabbix'
              - $._environment.reporter.report($this, format('Running at http://{0}', $address))
          - $.setAttr(deployed, true)
